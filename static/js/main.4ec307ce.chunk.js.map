{"version":3,"sources":["WebSiteStructure.js","common/Header.js","common/Footer.js","common/NavigationBar.js","SectionPathEnum.js","sections/MainPage.js","sections/CompanyPage.js","Map.js","sections/ContactsPage.js","sections/PortfolioPage.js","sections/ServicesPage.js","sections/ClientsPage.js","sections/NewsPage.js","sections/NotFoundPage.js","common/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["WebSiteStructure","_this","this","Object","classCallCheck","getListOfSections","sections","WebSiteSections","filter","site","IsHidden","sort","a","b","OrdinalNumber","getListOfSocialMedia","links","LinksToSocialMedia","link","getListOfClientLogos","logos","ClientsPage","ClientLogos","client","sectionIsVisible","sectionLink","section","find","Link","getCompanyPhoneNumber","CompanyPhoneNumber","getCompanyEmail","CompanyEmail","getCompanyLegalAddress","CompanyLegalAddress","getCompanyOfficeAddress","CompanyOfficeAddress","getCompanyMailCorrespondenceAddress","CompanyMailCorrespondenceAddress","getCompanyFaxNumber","CompanyFaxNumber","getCompanyWorkingHours","CompanyWorkingHours","Header","getLinksToSections","sectionList","props","webSiteStructure","map","react_default","createElement","key","to","process","Name","id","src","alt","React","Component","Footer","getLinksToSocialMedia","linkList","href","target","rel","className","Icon","Fragment","NavigationBar","SectionPathEnum","freeze","Main","Company","Contacts","Portfolio","Services","Clients","News","NotFound","MainPage","Redirect","CompanyPage","AnyReactComponent","_ref","text","Map","style","height","width","lib_default","defaultCenter","center","defaultZoom","zoom","Map_AnyReactComponent","lat","lng","defaultProps","ContactsPage","Caption","Map_Map","PortfolioPage","ServicesPage","getClientLogos","logoList","logo","Text","NewsPage","NotFoundPage","MainContent","Switch","Route","exact","path","render","MainPage_MainPage","CompanyPage_CompanyPage","ContactsPage_ContactsPage","PortfolioPage_PortfolioPage","ServicesPage_ServicesPage","ClientsPage_ClientsPage","NewsPage_NewsPage","NotFoundPage_NotFoundPage","App","state","_this2","fetch","then","response","json","data","setState","assign","Header_Header","NavigationBar_NavigationBar","MainContent_MainContent","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ec307ce.chunk.js","sourcesContent":["class WebSiteStructure {\r\n    constructor() {\r\n        this.CompanyPhoneNumber = '';\r\n        this.CompanyEmail = '';\r\n        this.CompanyLegalAddress = '';\r\n        this.CompanyOfficeAddress = '';\r\n        this.CompanyMailCorrespondenceAddress = '';\r\n        this.CompanyFaxNumber = '';\r\n        this.CompanyWorkingHours = '';\r\n        this.WebSiteSections = [];\r\n        this.LinksToSocialMedia = [];\r\n        this.ClientsPage = {};\r\n    }\r\n    getListOfSections = () => {\r\n        let sections = this.WebSiteSections.filter(site => !site.IsHidden);\r\n        sections.sort((a, b) => {\r\n            if(a.OrdinalNumber < b.OrdinalNumber)\r\n                return -1;\r\n            if(b.OrdinalNumber < a.OrdinalNumber)\r\n                return 1;\r\n            return 0;\r\n        });\r\n        return sections;\r\n    };\r\n    getListOfSocialMedia = () => {\r\n        let links = this.LinksToSocialMedia.filter(link => !link.IsHidden);\r\n        links.sort((a, b) => {\r\n            if(a.OrdinalNumber < b.OrdinalNumber)\r\n                return -1;\r\n            if(b.OrdinalNumber < a.OrdinalNumber)\r\n                return 1;\r\n            return 0;\r\n        });\r\n        return links;\r\n    };\r\n    getListOfClientLogos = () => {\r\n        let logos = this.ClientsPage.ClientLogos.filter(client => !client.IsHidden);\r\n        logos.sort((a, b) => {\r\n            if(a.OrdinalNumber < b.OrdinalNumber)\r\n                return -1;\r\n            if(b.OrdinalNumber < a.OrdinalNumber)\r\n                return 1;\r\n            return 0;\r\n        });\r\n        return logos;\r\n    };\r\n    sectionIsVisible = (sectionLink) => {\r\n        let section = this.WebSiteSections.find(section => section.Link === sectionLink);\r\n        if(section)\r\n            return !section.IsHidden;\r\n        return false;\r\n    };\r\n    getCompanyPhoneNumber = () => {\r\n        return this.CompanyPhoneNumber;\r\n    };\r\n    getCompanyEmail = () => {\r\n        return this.CompanyEmail;\r\n    };\r\n    getCompanyLegalAddress = () => {\r\n        return this.CompanyLegalAddress;\r\n    };\r\n    getCompanyOfficeAddress = () => {\r\n        return this.CompanyOfficeAddress;\r\n    };\r\n    getCompanyMailCorrespondenceAddress = () => {\r\n        return this.CompanyMailCorrespondenceAddress;\r\n    };\r\n    getCompanyFaxNumber = () => {\r\n        return this.CompanyFaxNumber;\r\n    };\r\n    getCompanyWorkingHours = () => {\r\n        return this.CompanyWorkingHours;\r\n    };\r\n}\r\n\r\nexport { WebSiteStructure };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { WebSiteStructure } from '../WebSiteStructure';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n    getLinksToSections = () => {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n        const sections = webSiteStructure.getListOfSections();\r\n        const sectionList = sections.map(section => {\r\n            return (\r\n                <li key={ section.OrdinalNumber }>\r\n                    <Link to={ process.env.PUBLIC_URL + section.Link }>{ section.Name }</Link>\r\n                </li>\r\n            );\r\n        });\r\n        return (<ul>{ sectionList }</ul>);\r\n    };\r\n    render() {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n        return (\r\n            <div id='header-block'>\r\n                <img src='logo.png' alt='Company logo'/>\r\n                { this.getLinksToSections() }\r\n                <p>{ webSiteStructure.getCompanyPhoneNumber() }</p>\r\n                <p>{ webSiteStructure.getCompanyEmail() }</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    webSiteStructure: PropTypes.instanceOf(WebSiteStructure)\r\n};\r\n\r\nexport { Header };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { WebSiteStructure } from '../WebSiteStructure';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Footer extends React.Component {\r\n    getLinksToSections = () => {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n        const sections = webSiteStructure.getListOfSections();\r\n        const sectionList = sections.map(section => {\r\n            return (\r\n                <li key={ section.OrdinalNumber }>\r\n                    <Link to={ process.env.PUBLIC_URL + section.Link }>{ section.Name }</Link>\r\n                </li>);\r\n        });\r\n        return (<ul>{ sectionList }</ul>);\r\n    };\r\n    getLinksToSocialMedia = () => {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n        const links = webSiteStructure.getListOfSocialMedia();\r\n        const linkList = links.map(link => {\r\n            return (\r\n                <a key={ link.OrdinalNumber } href={ link.Link } target='_blank' rel='noopener noreferrer'>\r\n                    <img className='social-media-icon' src={ process.env.PUBLIC_URL + link.Icon } alt={ link.Link }/>\r\n                </a>\r\n            );\r\n        });\r\n        return (<React.Fragment>{ linkList }</React.Fragment>);\r\n    };\r\n    render() {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n        return (\r\n            <div id='footer-block'>\r\n                <p>copyright</p>\r\n                <p>{ webSiteStructure.getCompanyLegalAddress() }</p>\r\n                <p>{ webSiteStructure.getCompanyEmail() }</p>\r\n                <p>{ webSiteStructure.getCompanyPhoneNumber() }</p>\r\n                { this.getLinksToSections() }\r\n                { this.getLinksToSocialMedia() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFooter.propTypes = {\r\n    webSiteStructure: PropTypes.instanceOf(WebSiteStructure)\r\n};\r\n\r\nexport { Footer };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { WebSiteStructure } from '../WebSiteStructure';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NavigationBar extends React.Component {\r\n    getLinksToSections = () => {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n        const sections = webSiteStructure.getListOfSections();\r\n        const sectionList = sections.map(section => {\r\n            return (\r\n                <li key={ section.OrdinalNumber }>\r\n                    <Link to={ process.env.PUBLIC_URL + section.Link }>{ section.Name }</Link>\r\n                </li>\r\n            );\r\n        });\r\n        return (<ul>{ sectionList }</ul>);\r\n    };\r\n    render() {\r\n        return (\r\n            <div id='navigation-bar'>\r\n                { this.getLinksToSections() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNavigationBar.propTypes = {\r\n    webSiteStructure: PropTypes.instanceOf(WebSiteStructure)\r\n};\r\n\r\nexport { NavigationBar };\r\n","let SectionPathEnum = Object.freeze({\r\n    Main: '/main',\r\n    Company: '/company',\r\n    Contacts: '/contacts',\r\n    Portfolio: '/portfolio',\r\n    Services: '/services',\r\n    Clients: '/clients',\r\n    News: '/news',\r\n    NotFound: '/pageNotFound'\r\n});\r\n\r\nexport { SectionPathEnum };\r\n","import React from 'react';\r\nimport { SectionPathEnum } from '../SectionPathEnum';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { WebSiteStructure } from '../WebSiteStructure';\r\n\r\nclass MainPage extends React.Component {\r\n    render() {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n\r\n        const sectionIsVisible = webSiteStructure.sectionIsVisible(SectionPathEnum.Main);\r\n        if(!sectionIsVisible)\r\n            return (<Redirect to={ SectionPathEnum.NotFound } />);\r\n\r\n        return (\r\n            <div>\r\n                <p><b>ГЛАВНАЯ</b></p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMainPage.propTypes = {\r\n    webSiteStructure: PropTypes.instanceOf(WebSiteStructure)\r\n};\r\n\r\nexport { MainPage };\r\n","import React from 'react';\r\nimport { SectionPathEnum } from '../SectionPathEnum';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { WebSiteStructure } from '../WebSiteStructure';\r\n\r\nclass CompanyPage extends React.Component {\r\n    render() {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n\r\n        const sectionIsVisible = webSiteStructure.sectionIsVisible(SectionPathEnum.Company);\r\n        if(!sectionIsVisible)\r\n            return (<Redirect to={ SectionPathEnum.NotFound } />);\r\n\r\n        return (\r\n            <div>\r\n                <p><b>КОМПАНИЯ</b></p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCompanyPage.propTypes = {\r\n    webSiteStructure: PropTypes.instanceOf(WebSiteStructure)\r\n};\r\n\r\nexport { CompanyPage };\r\n","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst AnyReactComponent = ({ text }) => <div id='map-office-label'>{text}</div>;\r\n\r\nclass Map extends Component {\r\n    static defaultProps = {\r\n        center: {\r\n            lat: 55.871203,\r\n            lng: 37.658275\r\n        },\r\n        zoom: 17\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            // Important! Always set the container height explicitly\r\n            <div style={{ height: '500px', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    defaultCenter={this.props.center}\r\n                    defaultZoom={this.props.zoom}\r\n                >\r\n                    <AnyReactComponent\r\n                        lat={55.871203}\r\n                        lng={37.658275}\r\n                        text={'Наш офис'}\r\n                    />\r\n                </GoogleMapReact>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { Map };\r\n","import React from 'react';\r\nimport { SectionPathEnum } from '../SectionPathEnum';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { WebSiteStructure } from '../WebSiteStructure';\r\nimport { Map } from '../Map';\r\n\r\nclass ContactsPage extends React.Component {\r\n    render() {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n\r\n        const sectionIsVisible = webSiteStructure.sectionIsVisible(SectionPathEnum.Contacts);\r\n        if(!sectionIsVisible)\r\n            return (<Redirect to={ SectionPathEnum.NotFound } />);\r\n\r\n        return (\r\n            <div>\r\n                <h1>{ webSiteStructure.ContactsPage.Caption }</h1>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Юридический телефон:</td>\r\n                            <td>{ webSiteStructure.getCompanyPhoneNumber() }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Факс:</td>\r\n                            <td>{ webSiteStructure.getCompanyFaxNumber() }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Юридический адрес:</td>\r\n                            <td>{ webSiteStructure.getCompanyLegalAddress() }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Адрес офиса:</td>\r\n                            <td>{ webSiteStructure.getCompanyOfficeAddress() }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Почтовый адрес:</td>\r\n                            <td>{ webSiteStructure.getCompanyMailCorrespondenceAddress() }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Время работы:</td>\r\n                            <td>{ webSiteStructure.getCompanyWorkingHours() }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Адрес электронной почты:</td>\r\n                            <td>{ webSiteStructure.getCompanyEmail() }</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <Map />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nContactsPage.propTypes = {\r\n    webSiteStructure: PropTypes.instanceOf(WebSiteStructure)\r\n};\r\n\r\nexport { ContactsPage };\r\n\r\n/*\r\n    - телефон наш или менеджеров\r\n\t- может фоточки, может инструкция как добраться\r\n\t- возможно форма для того чтоб можно было быстро отправить письмо, или запросить обратный звонок\r\n\t- реквизиты компании (название ооо, инн, кпп и т.д.)\r\n*/","import React from 'react';\r\nimport { SectionPathEnum } from '../SectionPathEnum';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { WebSiteStructure } from '../WebSiteStructure';\r\n\r\nclass PortfolioPage extends React.Component {\r\n    render() {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n\r\n        const sectionIsVisible = webSiteStructure.sectionIsVisible(SectionPathEnum.Portfolio);\r\n        if(!sectionIsVisible)\r\n            return (<Redirect to={ SectionPathEnum.NotFound } />);\r\n\r\n        return (\r\n            <div>\r\n                <p><b>ПОРТФОЛИО</b></p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPortfolioPage.propTypes = {\r\n    webSiteStructure: PropTypes.instanceOf(WebSiteStructure)\r\n};\r\n\r\nexport { PortfolioPage };\r\n","import React from 'react';\r\nimport { SectionPathEnum } from '../SectionPathEnum';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { WebSiteStructure } from '../WebSiteStructure';\r\n\r\nclass ServicesPage extends React.Component {\r\n    render() {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n\r\n        const sectionIsVisible = webSiteStructure.sectionIsVisible(SectionPathEnum.Services);\r\n        if(!sectionIsVisible)\r\n            return (<Redirect to={ SectionPathEnum.NotFound } />);\r\n\r\n        return (\r\n            <div>\r\n                <p><b>УСЛУГИ</b></p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nServicesPage.propTypes = {\r\n    webSiteStructure: PropTypes.instanceOf(WebSiteStructure)\r\n};\r\n\r\nexport { ServicesPage };\r\n","import React from 'react';\r\nimport { SectionPathEnum } from '../SectionPathEnum';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { WebSiteStructure } from '../WebSiteStructure';\r\n\r\nclass ClientsPage extends React.Component {\r\n    getClientLogos = () => {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n        const logos = webSiteStructure.getListOfClientLogos();\r\n\r\n        const logoList = logos.map(logo => {\r\n            return (\r\n                <img key={ logo.OrdinalNumber } className='client-logo' src={ process.env.PUBLIC_URL + logo.Icon } alt='missing text' />\r\n            );\r\n        });\r\n        return (<div>{ logoList }</div>);\r\n    };\r\n    render() {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n\r\n        const sectionIsVisible = webSiteStructure.sectionIsVisible(SectionPathEnum.Clients);\r\n        if(!sectionIsVisible)\r\n            return (<Redirect to={ SectionPathEnum.NotFound } />);\r\n\r\n        return (\r\n            <div>\r\n                <h1>{ webSiteStructure.ClientsPage.Caption }</h1>\r\n                <p>{ webSiteStructure.ClientsPage.Text }</p>\r\n                <h2>Нам доверяют:</h2>\r\n                { this.getClientLogos() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nClientsPage.propTypes = {\r\n    webSiteStructure: PropTypes.instanceOf(WebSiteStructure)\r\n};\r\n\r\nexport { ClientsPage };\r\n","import React from 'react';\r\nimport { SectionPathEnum } from '../SectionPathEnum';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { WebSiteStructure } from '../WebSiteStructure';\r\n\r\nclass NewsPage extends React.Component {\r\n    render() {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n\r\n        const sectionIsVisible = webSiteStructure.sectionIsVisible(SectionPathEnum.News);\r\n        if(!sectionIsVisible)\r\n            return (<Redirect to={ SectionPathEnum.NotFound } />);\r\n\r\n        return (\r\n            <div>\r\n                <p><b>НОВОСТИ</b></p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNewsPage.propTypes = {\r\n    webSiteStructure: PropTypes.instanceOf(WebSiteStructure)\r\n};\r\n\r\nexport { NewsPage };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { WebSiteStructure } from '../WebSiteStructure';\r\n\r\nclass NotFoundPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p><b>СТРАНИЦА НЕ НАЙДЕНА</b></p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotFoundPage.propTypes = {\r\n    webSiteStructure: PropTypes.instanceOf(WebSiteStructure)\r\n};\r\n\r\nexport { NotFoundPage };\r\n","import React from 'react';\r\nimport { MainPage } from '../sections/MainPage';\r\nimport { CompanyPage } from '../sections/CompanyPage';\r\nimport { ContactsPage } from '../sections/ContactsPage';\r\nimport { PortfolioPage } from '../sections/PortfolioPage';\r\nimport { ServicesPage } from '../sections/ServicesPage';\r\nimport { ClientsPage } from '../sections/ClientsPage';\r\nimport { NewsPage } from '../sections/NewsPage';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { WebSiteStructure } from '../WebSiteStructure';\r\nimport { SectionPathEnum } from '../SectionPathEnum';\r\nimport { NotFoundPage } from '../sections/NotFoundPage';\r\n\r\nclass MainContent extends React.Component {\r\n    render() {\r\n        const webSiteStructure = this.props.webSiteStructure;\r\n        return (\r\n            <div id='main-content'>\r\n                <Switch>\r\n                    <Route exact path={ process.env.PUBLIC_URL + '/' }                          render={() => ( <MainPage       webSiteStructure={ webSiteStructure } /> )} />\r\n                    <Route       path={ process.env.PUBLIC_URL + SectionPathEnum.Main }         render={() => ( <MainPage       webSiteStructure={ webSiteStructure } /> )} />\r\n                    <Route       path={ process.env.PUBLIC_URL + SectionPathEnum.Company }      render={() => ( <CompanyPage    webSiteStructure={ webSiteStructure } /> )} />\r\n                    <Route       path={ process.env.PUBLIC_URL + SectionPathEnum.Contacts }     render={() => ( <ContactsPage   webSiteStructure={ webSiteStructure } /> )} />\r\n                    <Route       path={ process.env.PUBLIC_URL + SectionPathEnum.Portfolio }    render={() => ( <PortfolioPage  webSiteStructure={ webSiteStructure } /> )} />\r\n                    <Route       path={ process.env.PUBLIC_URL + SectionPathEnum.Services }     render={() => ( <ServicesPage   webSiteStructure={ webSiteStructure } /> )} />\r\n                    <Route       path={ process.env.PUBLIC_URL + SectionPathEnum.Clients }      render={() => ( <ClientsPage    webSiteStructure={ webSiteStructure } /> )} />\r\n                    <Route       path={ process.env.PUBLIC_URL + SectionPathEnum.News }         render={() => ( <NewsPage       webSiteStructure={ webSiteStructure } /> )} />\r\n                    <Route       path={ process.env.PUBLIC_URL + SectionPathEnum.NotFound }     render={() => ( <NotFoundPage   webSiteStructure={ webSiteStructure } /> )} />\r\n                    <Route render={() => ( <Redirect to={ process.env.PUBLIC_URL + SectionPathEnum.NotFound } /> )} />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMainContent.propTypes = {\r\n    webSiteStructure: PropTypes.instanceOf(WebSiteStructure)\r\n};\r\n\r\nexport { MainContent };\r\n","import React, { Component } from 'react';\nimport { WebSiteStructure } from './WebSiteStructure';\nimport { Header } from './common/Header';\nimport { Footer } from './common/Footer';\nimport { NavigationBar } from './common/NavigationBar';\nimport { MainContent } from './common/MainContent';\nimport './main.css';\n\nclass App extends Component {\n    state = {\n        webSiteStructure: null\n    };\n    componentDidMount() {\n        fetch('data.json')\n            .then(response => response.json())\n            .then(data => this.setState(\n                { webSiteStructure: Object.assign(new WebSiteStructure(), data) })\n            );\n    }\n    render() {\n        const { webSiteStructure } = this.state;\n        return (\n            <div className='App'>\n                { webSiteStructure && (<Header webSiteStructure={ webSiteStructure } />) }\n                { webSiteStructure && (<NavigationBar webSiteStructure={ webSiteStructure } />) }\n                { webSiteStructure && (<MainContent webSiteStructure={ webSiteStructure }/>) }\n                { webSiteStructure && (<Footer webSiteStructure={ webSiteStructure } />) }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}